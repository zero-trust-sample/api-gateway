name: release-dev

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  NAMESPACE: "dev"
  IMAGE_NAME: "api-gateway"

jobs:
  build:
    runs-on: ubuntu-22.04
    environment: dev
    outputs:
      sha_short: ${{ steps.vars.outputs.sha_short }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set build vars
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      
      - name: Auth to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
      
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
      
      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"
      
      - name: Build container image
        run: ./gradlew jib --image=${{ vars.GCP_IMAGES_REPOSITORY }}/${IMAGE_NAME}:${{ steps.vars.outputs.sha_short }}

  deploy:
    needs: build
    runs-on: ubuntu-22.04
    environment: dev
    env:
      SHA_SHORT: ${{ needs.build.outputs.sha_short }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Auth to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
      
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          install_components: "gke-gcloud-auth-plugin"
      
      - name: Setup k8s connection
        run: gcloud container clusters get-credentials secure-cluster --zone europe-west1-b --project zero-trust-diploma-2025

      - name: Prepare Helm
        run: helm dependency build .helm/

      - name: Build Helm chart
        run: |
          helm template ${{ github.event.repository.name }} .helm/ \
          --dry-run --debug \
          -f .helm/values-${NAMESPACE}.yaml \
          --namespace ${NAMESPACE} \
          --set environment=${NAMESPACE} \
          --set image.repository=${{ vars.GCP_IMAGES_REPOSITORY }}/${IMAGE_NAME} \
          --set image.tag=${SHA_SHORT} \
          --set env_vars.spring_profiles_active=${NAMESPACE} \
          --set env_vars.google_application_credentials=${{ vars.GOOGLE_APPLICATION_CREDENTIALS }} \

      - name: Deploy Helm chart
        run: |
          helm upgrade --install ${{ github.event.repository.name }} .helm/ \
          -f .helm/values-${NAMESPACE}.yaml \
          --wait --create-namespace \
          --namespace ${NAMESPACE} \
          --set environment=${NAMESPACE} \
          --set image.repository=${{ vars.GCP_IMAGES_REPOSITORY }}/${IMAGE_NAME} \
          --set image.tag=${SHA_SHORT} \
          --set env_vars.spring_profiles_active=${NAMESPACE} \
          --set env_vars.google_application_credentials=${{ vars.GOOGLE_APPLICATION_CREDENTIALS }} \
          --timeout 600s
